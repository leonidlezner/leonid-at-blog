---
import Listing from "../../components/layouts/Listing.astro";
import {
  filterAndSortPosts,
  getArea,
  updatePostData,
} from "../../utils/postsUtils";
import Settings from "../../settings.json";
import List from "../../components/List.astro";

export async function getStaticPaths() {
  const posts: Record<string, any>[] = await Astro.glob(
    "../../posts/**/*.{md,mdx}"
  );

  let postsPerArea: Record<string, any[]> = {};

  filterAndSortPosts(posts).forEach((post) => {
    const area: string = getArea(post.file);

    post = updatePostData(post, area);

    if (postsPerArea[area] == undefined) {
      postsPerArea[area] = [];
    }

    postsPerArea[area].push(post);
  });

  return Object.keys(postsPerArea).map((area) => {
    return {
      params: {
        area: area,
      },
      props: { posts: postsPerArea[area] },
    };
  });
}

interface Props {
  posts: Record<string, any>[];
}

const { area } = Astro.params;
const { posts } = Astro.props;
---

<Listing
  area={area}
  title={Settings.titles[`posts-${area}` as keyof typeof Settings.titles]}
>
  <List posts={posts} />
</Listing>
